import * as React from 'react';
import { DayOfWeek, IDatePickerStrings } from './DatePicker.Props';
export interface IDayInfo {
    key: string;
    date: string;
    originalDate: Date;
    isInMonth: boolean;
    isToday: boolean;
    isSelected: boolean;
}
export interface IDatePickerDayProps {
    strings: IDatePickerStrings;
    selectedDate: Date;
    navigatedDate: Date;
    onSelectDate: (date: Date) => void;
    onNavigateDate: (date: Date, focusOnNavigatedDay: boolean) => void;
    firstDayOfWeek: DayOfWeek;
}
export interface IDatePickerDayState {
    activeDescendantId?: string;
    weeks?: IDayInfo[][];
}
export declare class DatePickerDay extends React.Component<IDatePickerDayProps, IDatePickerDayState> {
    refs: {
        [key: string]: React.ReactInstance;
        navigatedDay: HTMLElement;
    };
    constructor(props: IDatePickerDayProps);
    componentWillReceiveProps(nextProps: IDatePickerDayProps): void;
    render(): JSX.Element;
    focus(): void;
    private _navigateMonthEdge(ev, date, weekIndex, dayIndex);
    private _onKeyDown(callback, ev);
    private _onSelectNextMonth();
    private _onSelectPrevMonth();
    private _getWeeks(navigatedDate, selectedDate);
}
