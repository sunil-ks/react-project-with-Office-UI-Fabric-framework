{"version":3,"sources":["components/Layer/Layer.tsx"],"names":[],"mappings":";;;;;;AAAA,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAE/B,0BAA0B,aAAa,CAAC,CAAA;AAExC,0BAAqC,iBAAiB,CAAC,CAAA;AACvD,QAAO,cAAc,CAAC,CAAA;AAEtB;IAA2B,yBAA8B;IAcvD,eAAY,KAAmB;QAC7B,kBAAM,KAAK,CAAC,CAAC;QAEb,IAAI,CAAC,GAAG,GAAG,iBAAK,EAAE,CAAC;IACrB,CAAC;IAEM,iCAAiB,GAAxB;QAAA,iBAYC;QAXC,IAAI,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,qBAAS,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAElF,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAE5B,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,KAAK,EAAE,UAAC,cAAc;YACzE,KAAI,CAAC,eAAe,GAAG,cAAc,CAAC;YAEtC,EAAE,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC;gBAC9B,KAAI,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC;YAC9B,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,oCAAoB,GAA3B;QACE,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACxC,CAAC;IAEM,yCAAyB,GAAhC,UAAiC,QAAqB;QACpD,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QAC9C,CAAC;IACH,CAAC;IAEM,2BAAW,GAAlB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;QACrC,CAAC;IACH,CAAC;IAEM,sBAAM,GAAb;QACE,MAAM,CAAC,CACL,qBAAC,IAAI,IACH,SAAS,EAAC,UAAU,EACpB,GAAG,EAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAG,EACtC,CACL,CAAC;IACJ,CAAC;IAxDa,kBAAY,GAAG;QAC3B,SAAS,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM;KAClC,CAAC;IAuDJ,YAAC;AAAD,CA1DA,AA0DC,CA1D0B,yBAAa,GA0DvC;AA1DY,aAAK,QA0DjB,CAAA","file":"components/Layer/Layer.js","sourcesContent":["import * as React from 'react';\r\nimport { ILayerProps } from './Layer.Props';\r\nimport { LayerHost } from './LayerHost';\r\nimport { ProjectedLayer } from './ProjectedLayer';\r\nimport { BaseComponent, getId } from '../../Utilities';\r\nimport './Layer.scss';\r\n\r\nexport class Layer extends BaseComponent<ILayerProps, {}> {\r\n  public static contextTypes = {\r\n    layerHost: React.PropTypes.object\r\n  };\r\n\r\n  public context: {\r\n    layerHost: LayerHost;\r\n  };\r\n\r\n  private _rootElement: HTMLElement;\r\n  private _projectedLayer: ProjectedLayer;\r\n  private _layerHost: LayerHost;\r\n  private _id: string;\r\n\r\n  constructor(props?: ILayerProps) {\r\n    super(props);\r\n\r\n    this._id = getId();\r\n  }\r\n\r\n  public componentDidMount() {\r\n    let layerHost = this.context.layerHost || LayerHost.getDefault(this._rootElement);\r\n\r\n    this._layerHost = layerHost;\r\n\r\n    layerHost.addLayer(this._id, this._rootElement, this.props, (projectedLayer) => {\r\n      this._projectedLayer = projectedLayer;\r\n\r\n      if (this.props.onLayerMounted) {\r\n        this.props.onLayerMounted();\r\n      }\r\n    });\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    this._layerHost.removeLayer(this._id);\r\n  }\r\n\r\n  public componentWillReceiveProps(newProps: ILayerProps) {\r\n    if (this._projectedLayer) {\r\n      this._projectedLayer.projectProps(newProps);\r\n    }\r\n  }\r\n\r\n  public forceUpdate() {\r\n    if (this._projectedLayer) {\r\n      this._projectedLayer.forceUpdate();\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <span\r\n        className='ms-Layer'\r\n        ref={ this._resolveRef('_rootElement') }\r\n        />\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}