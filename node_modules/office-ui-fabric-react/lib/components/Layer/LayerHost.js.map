{"version":3,"sources":["components/Layer/LayerHost.tsx"],"names":[],"mappings":"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","file":"components/Layer/LayerHost.js","sourcesContent":["import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { Fabric } from '../../Fabric';\r\nimport {\r\n  BaseComponent,\r\n  autobind,\r\n  css,\r\n  findIndex,\r\n  getNativeProps,\r\n  divProperties\r\n} from '../../Utilities';\r\nimport { ProjectedLayer } from './ProjectedLayer';\r\nimport { ILayerProps } from './Layer.Props';\r\nimport { ILayerHostProps } from './LayerHost.Props';\r\nimport './LayerHost.scss';\r\n\r\nexport interface ILayer {\r\n  id: string;\r\n  parentElement: HTMLElement;\r\n  props: ILayerProps;\r\n  onMounted: (projectedLayer: ProjectedLayer) => void;\r\n}\r\n\r\nconst DEFAULT_HOST_ID = '__layerHost';\r\n/**\r\n * LayerHost provides a wrapper that acts as a passthrough, rendering the given children within it, but also\r\n * appending a div at the end, which projects all content wrapped in the Layer components within. Projecting\r\n * DOM to the end of the document allows for overlaying and stacking scenarios.\r\n *\r\n * Normally you do not need to interact directly with LayerHost. If you render Layers within content that isn't\r\n * wrapped within a LayerHost, a LayerHost will be created and appended to the end of the document body, where\r\n * layer content will then be projected. However in some circumstances you want Layered content to be rendered\r\n * in a specific place rather than document body (for example in a popup window or contained within a scrollable\r\n * region.) In those cases, wrap the content wihtin a LayerHost.\r\n *\r\n * @example\r\n * <LayerHost>\r\n *   <Layer>I will at the end of LayerHost.</Layer>\r\n *   <div>I will render normally.</div>\r\n * </LayerHost>\r\n **/\r\nexport class LayerHost extends BaseComponent<ILayerHostProps, {}> {\r\n  public static childContextTypes = {\r\n    layerHost: React.PropTypes.object\r\n  };\r\n\r\n  private _layers: ILayer[];\r\n  private _layerRefs: {\r\n    [key: string]: ProjectedLayer\r\n  };\r\n\r\n  public static getDefault(layerElement: HTMLElement): LayerHost {\r\n    let doc = layerElement.ownerDocument;\r\n    let hostElement = doc.getElementById(DEFAULT_HOST_ID);\r\n\r\n    if (hostElement) {\r\n      return hostElement[DEFAULT_HOST_ID] as LayerHost;\r\n    } else {\r\n      hostElement = doc.createElement('div');\r\n      hostElement.id = DEFAULT_HOST_ID;\r\n      doc.body.appendChild(hostElement);\r\n\r\n      let defaultHost = ReactDOM.render(<LayerHost isDefault />, hostElement) as LayerHost;\r\n\r\n      hostElement[DEFAULT_HOST_ID] = defaultHost;\r\n\r\n      return defaultHost;\r\n    }\r\n  }\r\n\r\n  constructor(props: ILayerHostProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      layers: []\r\n    };\r\n\r\n    this._layers = [];\r\n    this._layerRefs = {};\r\n  }\r\n\r\n  public getChildContext() {\r\n    return {\r\n      layerHost: this as LayerHost\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    let divProps = getNativeProps(this.props, divProperties);\r\n\r\n    return (\r\n      <div { ...divProps } className={ css('ms-LayerHost', this.props.className, { 'ms-LayerHost--default': this.props.isDefault }) }>\r\n        <Fabric>\r\n          { this.props.children }\r\n          <div className='ms-LayerHost-overlay'>\r\n            { this._layers.map(layer => (\r\n              <ProjectedLayer\r\n                key={ layer.id }\r\n                layerId={ layer.id }\r\n                parentElement={ layer.parentElement }\r\n                defaultRemoteProps={ layer.props }\r\n                ref={ this._resolveLayer }\r\n                />\r\n            )) }\r\n          </div>\r\n        </Fabric>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public addLayer(id: string, parentElement: HTMLElement, props: ILayerProps, onMounted: (proxyLayer: ProjectedLayer) => void) {\r\n    this._layers.push({\r\n      id,\r\n      parentElement,\r\n      props,\r\n      onMounted\r\n    });\r\n    this.forceUpdate();\r\n  }\r\n\r\n  public removeLayer(id: string) {\r\n    let index = findIndex(this._layers, layer => layer.id === id);\r\n\r\n    if (index >= 0) {\r\n      this._layers.splice(index, 1);\r\n      delete this._layerRefs[id];\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n\r\n  @autobind\r\n  private _resolveLayer(projectedLayer: ProjectedLayer) {\r\n    if (projectedLayer) {\r\n      let layerId = projectedLayer.getId();\r\n      let index = findIndex(this._layers, layer => layer.id === layerId);\r\n\r\n      if (index >= 0 && this._layerRefs[layerId] !== projectedLayer) {\r\n        this._layerRefs[layerId] = projectedLayer;\r\n        this._layers[index].onMounted(projectedLayer);\r\n      }\r\n    }\r\n  }\r\n\r\n}"],"sourceRoot":"..\\..\\..\\src"}